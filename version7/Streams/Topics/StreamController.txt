Understanding Streams, StreamController, StreamBuilder, and Stream Subscription in Flutter


StreamController in Flutter:
 1. StreamController is used to create and manage streams.
 2. A StreamController is like a remote control for a stream.
 3. In each â€˜StreamControllerâ€™ there are two objects named sink/add (which helps us push events onto stream) and stream(which helps us receive events from sink)


When to use:
 1. Use StreamController when you want to push values to a stream manually.


ðŸš§ Important Notes
 1. Always call controller.close() when done (to avoid memory leaks)
 2. If only one listener: use default controller
 3. If multiple listeners needed: use .broadcast()


Example:
import 'dart:async'; // Required for StreamController

void main() {
  // Step 1: Create a StreamController for String type data
  final controller = StreamController<String>();

  // Step 2: Start listening to the stream
  controller.stream.listen((value) {
    print("Stream received: $value");
  });

  // Step 3: Add values into the stream
  controller.sink.add("Hello");
  controller.add("Flutter");
  controller.add("Streams are cool!");

  // Step 4: Close the stream when you're done
  controller.close();
}
